name: Deploy to EC2

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build -x test

    - name: 빌드된 파일 이름 변경하기
      run: mv ./build/libs/*SNAPSHOT.jar ./cicd.jar

    - name: SCP로 EC2에 파일 전송하기
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "cicd.jar,scripts/deploy.sh"
        target: "/home/ubuntu/app"
        strip_components: 0

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@master
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          envs: DB_USERNAME,DB_PASSWORD,AWS_S3_ACCESS_KEY,AWS_S3_SECRET_ACCESS_KEY,AWS_S3_BUCKET_NAME,AWS_S3_REGION
          script: |
            cd /home/ubuntu/app
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh