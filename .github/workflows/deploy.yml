name: Deploy to EC2

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
    - name: Build with Gradle Wrapper
      run: ./gradlew clean build -x test
    - name: 빌드된 파일 이름 변경하기
      run: mv ./build/libs/*SNAPSHOT.jar ./cicd.jar
    - name: SCP로 EC2에 빌드된 파일 전송하기
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: cicd.jar
        target: /home/ubuntu/app

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: SSH로 EC2에 접속하기
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script_stop: true
        script: |
          cd /home/ubuntu/app
          export DB_USERNAME=${{ secrets.DB_USERNAME }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}
          export AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          export AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          export AWS_S3_SECRET_REGION=${{ secrets.AWS_S3_SECRET_REGION }}
          echo "Current directory: $(pwd)"
          echo "Checking if jar exists:"
          ls -l cicd.jar
          echo "Killing existing process:"
          sudo fuser -k -n tcp 8080 || true
          echo "Starting new process:"
          sudo nohup java -jar cicd.jar > output.log 2>&1 &
          echo "Waiting for application to start..."
          sleep 10
          echo "Checking process:"
          ps -ef | grep java
          echo "Checking logs:"
          tail -n 50 output.log
